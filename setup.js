// Generated by CoffeeScript 1.6.3
(function() {
  var amqp, connection, fs, log, logger, queue_name, rabbitmq_config, _i, _len, _ref;

  amqp = require("amqp");

  fs = require("fs");

  logger = require("./src/logger");

  log = logger.log;

  if (fs.existsSync("" + __dirname + "/../rabbitmq.json")) {
    rabbitmq_config = JSON.parse(fs.readFileSync("" + __dirname + "/../rabbitmq.json", "utf8"));
  } else {
    rabbitmq_config = {};
  }

  connection = amqp.createConnection(rabbitmq_config);

  _ref = ['failure', 'failure_parse', 'outbox', 'retries', 'success'];
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    queue_name = _ref[_i];
    connection.exchange(queue_name, {
      type: 'direct',
      durable: true,
      autoDelete: false
    }, function() {
      return log.info("Exchange " + queue_name + " created");
    });
    connection.queue(queue_name, {
      durable: true,
      autoDelete: false
    }, function(q) {
      log.info("Queue " + queue_name + " created");
      if (queue_name === 'failure_parse') {
        return q.bind('failure', 0, function() {
          return log.info("Queue {queue_name} bound to exchange failure");
        });
      } else {
        return q.bind(queue_name, 0, function() {
          return log.info("Queue {queue_name} bound to exchange " + queue_name);
        });
      }
    });
  }

}).call(this);
